<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
 PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
 "http://mybatis.org/dtd/mybatis-3-mapper.dtd"> 
<mapper namespace="com.ezen.FSB.mapper.adminShopMapper">
	
	<!-- 상품 목록 -->
	<select id="adminListProd" resultType="shopProductDTO">
		select p.*, g.game_name, g.game_img from f_product p left join f_game g on p.game_num = g.game_num order by p.prod_num asc
	</select>
	<!-- 상품 정렬 -->
	<select id="adminSortProd1" resultType="shopProductDTO">
		select p.*, g.game_name, g.game_img from f_product p left join f_game g on p.game_num = g.game_num order by g.game_name asc
	</select>
	<select id="adminSortProd2" resultType="shopProductDTO">
		select p.*, g.game_name, g.game_img from f_product p left join f_game g on p.game_num = g.game_num order by g.game_name desc
	</select>
	<select id="adminSortProd3" resultType="shopProductDTO">
		select p.*, g.game_name, g.game_img from f_product p left join f_game g on p.game_num = g.game_num order by p.prod_price asc
	</select>
	<select id="adminSortProd4" resultType="shopProductDTO">
		select p.*, g.game_name, g.game_img from f_product p left join f_game g on p.game_num = g.game_num order by p.prod_price desc
	</select>
	<select id="adminSortProd5" resultType="shopProductDTO">
		select p.*, g.game_name, g.game_img from f_product p left join f_game g on p.game_num = g.game_num order by p.prod_discount asc
	</select>
	<select id="adminSortProd6" resultType="shopProductDTO">
		select p.*, g.game_name, g.game_img from f_product p left join f_game g on p.game_num = g.game_num order by p.prod_discount desc
	</select>
	<select id="adminSortProd7" resultType="shopProductDTO">
		select p.*, g.game_name, g.game_img from f_product p left join f_game g on p.game_num = g.game_num order by p.prod_regdate asc
	</select>
	<select id="adminSortProd8" resultType="shopProductDTO">
		select p.*, g.game_name, g.game_img from f_product p left join f_game g on p.game_num = g.game_num order by p.prod_regdate desc
	</select>
	

	<!-- 상품 상세보기 -->
	<select id="adminGetProd" parameterType="int" resultType="shopProductDTO">
		select p.*, g.game_name, g.game_img from f_product p left join f_game g on p.game_num = g.game_num where p.prod_num = #{prod_num}
	</select>
	<select id="adminGetProdReview" parameterType="int" resultType="shopReviewDTO">
		select r.*, m.mem_nickname from f_shop_review r left join f_member m on r.mem_num = m.mem_num where r.prod_num = #{prod_num}
	</select>
	<select id="adminGetProdStar" parameterType="int" resultType="int">
		select sum(sr_starrating) from f_shop_review where prod_num = #{prod_num}
	</select>
	<select id="adminGetProdReviewCount" parameterType="int" resultType="int">
		select count(sr_num) from f_shop_review where prod_num = #{prod_num}
	</select>
	<!-- 상품 리뷰 꺼내기 -->
	<select id="adminGetProdReviewImg" parameterType="int" resultType="shopReviewDTO">
		select * from f_shop_review where sr_num = #{sr_num}
	</select>
	
	<!-- 상품 등록 -->
	<select id="adminNotProdGameList" resultType="gameDTO">
		select g.* from f_game g left join f_product p on g.game_num = p.game_num where p.game_num IS NULL
	</select> 
	
	<insert id="adminInsertProd" parameterType="shopProductDTO">
		insert into f_product values(f_product_seq.nextval, #{game_num}, #{prod_img}, #{prod_qty}, 0, 0, #{prod_price}, #{prod_point}, #{prod_delchar}, #{prod_company}, sysdate)
	</insert>

	<!-- 상품 수정 -->
	<update id="adminUpdateProd" parameterType="shopProductDTO">
		update f_product set prod_company = #{prod_company} , prod_qty = #{prod_qty}, prod_price = #{prod_price}, prod_discount = #{prod_discount}, prod_delchar = #{prod_delchar}, prod_img = #{prod_img} where prod_num = #{prod_num}
	</update>
	
	<!-- 상품 삭제 -->
	<delete id="adminDeleteProd" parameterType="int">
		delete from f_product where prod_num = #{prod_num}
	</delete>
	
	<!-- 상품 찾기 // 게임 이름 -->
	<select id="adminFindGameName" parameterType="String" resultType="shopProductDTO">
		select p.*, g.game_name, g.game_img from f_product p inner join f_game g on g.game_num = p.game_num where g.game_name like '%'||#{searchString}||'%'
	</select>
	<!-- 상품 찾기 // 판매사 -->
	<select id="adminFindProdCompany" parameterType="String" resultType="shopProductDTO">
		select p.*, g.game_name, g.game_img from f_product p inner join f_game g on g.game_num = p.game_num where p.prod_company like '%'||#{searchString}||'%'
	</select>
	
	<!-- shop 쿠폰 목록 -->
	<select id="adminListScoupon" resultType="shopCouponDTO">
		select * from f_scoupon
	</select>
	<!-- shop 쿠폰 등록 // 만료일 지정O-->
	<insert id="adminInsertScoupon1" parameterType="shopCouponDTO">
		insert into f_scoupon values(f_scoupon_seq.nextval, #{sc_name}, #{sc_type}, #{sc_discount}, sysdate, #{sc_duedate}, #{sc_min}, #{sc_limit})
	</insert>
	<!-- shop 쿠폰 등록 // 만료일 지정X -->
	<insert id="adminInsertScoupon2" parameterType="shopCouponDTO">
		insert into f_scoupon values(f_scoupon_seq.nextval, #{sc_name}, #{sc_type}, #{sc_discount}, sysdate, NULL, #{sc_min}, #{sc_limit})
	</insert>
	<!-- shop 쿠폰 만료일 7일전 쿠폰 리스트 -->
	<select id="adminSortScoupon" resultType="shopCouponDTO">
		<![CDATA[select * from f_scoupon where sc_duedate > sysdate-7 and sc_duedate < sysdate]]>
	</select>
	<!-- sc_num 을 가지고 있는 사용자 목록 -->
	<select id="adminListUsc" parameterType="int" resultType="ShopUserCouponDTO">
		select u.*, m.mem_nickname from f_user_scoupon u left join f_member m on u.mem_num = m.mem_num where u.sc_num = #{sc_num}
	</select>
	<!-- shop 쿠폰 삭제 -->
 	<delete id="adminDeleteScoupon" parameterType="int">
		delete from f_scoupon where sc_num = #{sc_num}
	</delete>
	<!-- 만료 기간 하루 지난 shop 쿠폰 삭제 -->
	<delete id="adminDeleteScouponDuedate">
		<![CDATA[delete from f_scoupon where sc_duedate = sysdate+1]]>
	</delete>
	
	
	<!-- 쇼핑몰 문의 내역 -->
	<select id="adminShopQnaList" resultType="ShopQnADTO">
		select q.*, m.mem_nickname from f_shop_qna q left join f_member m on q.mem_num = m.mem_num order by sq_regdate asc
	</select>
	<!-- 쇼핑몰 문의 미처리 내역 -->
	<select id="adminShopQnaListCheck" resultType="ShopQnADTO">
		select q.*, m.mem_nickname from f_shop_qna q left join f_member m on q.mem_num = m.mem_num where q.sq_check = 0
	</select>
	<select id="adminShopQnaGet" parameterType="int" resultType="ShopQnADTO">
		select q.*, m.mem_nickname from f_shop_qna q left join f_member m on q.mem_num = m.mem_num where sq_num = #{sq_num}
	</select>
	<!-- 쇼핑몰 문의 내역 답변 -->
	<update id="adminShopQnaReply" parameterType="ShopQnADTO">
		update f_shop_qna set sq_reply = #{sq_reply} where sq_num = #{sq_num}
	</update>
	<!-- 쇼핑몰 문의 내역 답변 NULL -->
	<update id="adminShopQnaReplyDel" parameterType="int">
		update f_shop_qna set sq_reply = NULL where sq_num = #{sq_num}
	</update>
	<!-- 쇼핑몰 문의 내역 답변 Check -->
	<update id="adminShopQnaReplyCheck" parameterType="map">
		update f_shop_qna set sq_check = #{check} where sq_num = #{sq_num}
	</update>
	
	
	<!-- 전체 상품 리뷰 목록  -->
	<select id="adminTotalShopReview" resultType="shopReviewDTO">
		select r.*, m.mem_nickname from f_shop_review r left join f_member m on r.mem_num = m.mem_num order by r.sr_regdate desc
	</select>
	<select id="adminTotalShopReview2" resultType="shopReviewDTO">
		select r.*, m.mem_nickname from f_shop_review r left join f_member m on r.mem_num = m.mem_num order by r.sr_starrating asc
	</select>
	<select id="adminTotalShopReview3" resultType="shopReviewDTO">
		select r.*, m.mem_nickname from f_shop_review r left join f_member m on r.mem_num = m.mem_num order by r.sr_starrating desc
	</select>
	<!-- 전체 상품 리뷰 목록 - 상세보기 -->
	<select id="adminTotalGetShopReview" parameterType="int" resultType="shopReviewDTO">
		select r.*, m.mem_nickname from f_shop_review r left join f_member m on r.mem_num = m.mem_num where r.sr_num = #{sr_num}
	</select>
	
	<!-- 주문 내역 -->
<!-- 	<select id="adminShopRefundList1" resultType="shopOrderDTO">
		select * from f_order where order_progress = -1 order by order_num desc
	</select> -->
	<select id="adminShopOrderList0" resultType="shopOrderDTO">
		select * from f_order where order_progress = 0 order by order_num desc
	</select>
	<select id="adminShopOrderList1" resultType="shopOrderDTO">
		select * from f_order where order_progress = 1 order by order_num desc
	</select>
	<select id="adminShopOrderList2" resultType="shopOrderDTO">
		select * from f_order where order_progress = 2 order by order_num desc
	</select>
	<select id="adminShopOrderList3" resultType="shopOrderDTO">
		select * from f_order where order_progress = 3 order by order_num desc
	</select>
	<select id="adminShopOrderList4" resultType="shopOrderDTO">
		select * from f_order where order_progress = 4 order by order_num desc
	</select>
	<!-- 주문내역 - 상세보기 -->
	<select id="adminGetShopOrder" parameterType="int" resultType="shopOrderDTO">
		select o.*, m.mem_hp1, m.mem_hp2, m.mem_hp3 from f_order o left join f_member m on o.mem_num = m.mem_num where order_num = #{order_num}
	</select>
	<!-- orderDetail 가져오기 -->
	<select id="adminGetOrderDetail" parameterType="int" resultType="shopOrderDetailDTO">
		select * from (select * from f_order_detail where order_num = #{order_num})A
			left join (select p.*, g.game_name, g.game_img from f_product p left join f_game g on p.game_num = g.game_num)B on A.prod_num = B.prod_num 
	</select>
	<!-- 주문내역 수정 -->
	<update id="adminUpdateShopOrder" parameterType="shopOrderDTO">
		update f_order set order_address1 = #{order_address1}, order_address2 = #{order_address2}, order_address3 = #{order_address3}, order_memo = #{order_memo}, order_payment = #{order_payment}, order_progress = #{order_progress}, order_invoice = #{order_invoice} where order_num = #{order_num}
	</update>
	<!-- 매출관리 // 월별 합계 -->
	<select id="adminSumSales01" resultType="int">
		select NVL(SUM(order_receiptprice),0) from f_order where order_date BETWEEN '2023-01-01' AND '2023-01-31'
	</select>
	<select id="adminSumSales02" resultType="int">
		select NVL(SUM(order_receiptprice),0) from f_order where order_date BETWEEN '2023-02-01' AND '2023-02-28'
	</select>
	<select id="adminSumSales03" resultType="int">
		select NVL(SUM(order_receiptprice),0) from f_order where order_date BETWEEN '2023-03-01' AND '2023-03-31'
	</select>
	<select id="adminSumSales04" resultType="int">
		select NVL(SUM(order_receiptprice),0) from f_order where order_date BETWEEN '2023-04-01' AND '2023-04-30'
	</select>
	<select id="adminSumSales05" resultType="int">
		select NVL(SUM(order_receiptprice),0) from f_order where order_date BETWEEN '2023-05-01' AND '2023-05-31'
	</select>
	<select id="adminSumSales06" resultType="int">
		select NVL(SUM(order_receiptprice),0) from f_order where order_date BETWEEN '2023-06-01' AND '2023-06-30'
	</select>
	<select id="adminSumSales07" resultType="int">
		select NVL(SUM(order_receiptprice),0) from f_order where order_date BETWEEN '2023-07-01' AND '2023-07-31'
	</select>
	<select id="adminSumSales08" resultType="int">
		select NVL(SUM(order_receiptprice),0) from f_order where order_date BETWEEN '2023-08-01' AND '2023-08-31'
	</select>
	<select id="adminSumSales09" resultType="int">
		select NVL(SUM(order_receiptprice),0) from f_order where order_date BETWEEN '2023-09-01' AND '2023-09-30'
	</select>
	<select id="adminSumSales10" resultType="int">
		select NVL(SUM(order_receiptprice),0) from f_order where order_date BETWEEN '2023-10-01' AND '2023-10-31'
	</select>
	<select id="adminSumSales11" resultType="int">
		select NVL(SUM(order_receiptprice),0) from f_order where order_date BETWEEN '2023-11-01' AND '2023-11-30'
	</select>
	<select id="adminSumSales12" resultType="int">
		select NVL(SUM(order_receiptprice),0) from f_order where order_date BETWEEN '2023-12-01' AND '2023-12-31'
	</select>
	
	<!-- 매출 관리 // order_detail 에서 상위 5개 판매 순위 -->
	<select id="adminRankSales" resultType="map">
		select prod_num , SUM(detail_qty) from f_order_detail group by prod_num order by SUM(detail_qty) DESC
	</select>
	
	<!-- 재고 관리 // 재고 오름차순 -->
	<select id="adminListInventory" resultType="shopProductDTO">
		select p.*, g.game_name, g.game_img from f_product p left join f_game g on p.game_num = g.game_num order by p.prod_qty asc
	</select>
	<!-- 재고 관리 // 5개 미만 상품 수-->
	<select id="adminCheckInventory" resultType="int">
		<![CDATA[select count(*) from f_product where prod_qty < 5]]>
	</select>
	<!-- 재고 추가 -->
	<update id="adminInsertInventory" parameterType="shopProductDTO">
		update f_product set prod_qty = prod_qty + #{prod_qty} where prod_num = #{prod_num}
	</update>
	<!-- 재고 수정 -->
	<update id="adminUpdateInventory" parameterType="shopProductDTO">
		update f_product set prod_qty = #{prod_qty} where prod_num = #{prod_num}
	</update>
	<!-- 쇼핑몰 환불 내역 단계별로 list -->
<!-- 	<select id="adminRefundList" parameterType="int" resultType="shopRefundDTO">
		select * from f_refund where refund_progress = #{refund_progress} order by refund_num asc
	</select> -->
	<!-- 환불내역 상세보기 -->
<!-- 	<select id="adminGetRefund" parameterType="int" resultType="shopRefundDTO">
		select * from f_refund where refund_num = #{refund_num}
	</select> -->
	<!-- 환불내역 수정 -->
<!-- 	<update id="adminUpdateRefund" parameterType="shopRefundDTO">
		update f_refund set refund_progress = #{refund_progress} where refund_num = #{refund_num}
	</update> -->
	<!-- 주문 내역 찾기 // 이름-->
	<select id="adminFindOrderName" parameterType="String" resultType="shopOrderDTO">
		select o.*, m.* from f_order o inner join f_member m on o.mem_num = m.mem_num where not o.order_progress = -1 and m.mem_name like '%'||#{searchString}||'%'
	</select>
	<!-- 주문 내역 찾기 // ID-->
	<select id="adminFindOrderID" parameterType="String" resultType="shopOrderDTO">
		select o.*, m.* from f_order o inner join f_member m on o.mem_num = m.mem_num where not o.order_progress = -1 and m.mem_id like '%'||#{searchString}||'%'
	</select>
	<!-- 환불 내역 찾기 // 이름-->
<!-- 	<select id="adminFindRefundName" parameterType="String" resultType="shopRefundDTO">
		select r.*, m.* from f_refund r inner join f_member m on r.mem_num = m.mem_num where m.mem_name like '%'||#{searchString}||'%'
	</select> -->
	<!-- 환불 내역 찾기 // ID-->
<!-- 	<select id="adminFindRefundID" parameterType="String" resultType="shopRefundDTO">
		select r.*, m.* from f_refund r inner join f_member m on r.mem_num = m.mem_num where m.mem_id like '%'||#{searchString}||'%'
	</select> -->
	
	<!-- 상품 좋아요 수 -->
	<select id="adminGetProdLike" parameterType="int" resultType="int">
		select count(*) from f_shop_like where prod_num = #{prod_num}
	</select>
	<!-- 환불 승인 -->
	<update id="adminRefundOk" parameterType="int">
		update f_order set order_progress = -1 where order_num = #{order_num}
	</update>
</mapper>